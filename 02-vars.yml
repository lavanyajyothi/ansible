#- name: Play level variable
#  hosts: all
#  vars:
#    URL: play.example.com
#  tasks:
#    - name: access URL in Task1
#      ansible.builtin.debug:
#        msg: URL in Task1 ={{URL}}
#    - name: Access URL in  Task2
#      ansible.builtin.debug:
#        msg: URL in Task2 ={{URL}}
### Declare Varibale in  playlevel then all the  tasks can access that variable
#- name: Demo on file Variables
#  hosts: all
#  vars_files:
#    - sample-vars.yml
#  tasks:
#    - name: Access URL
#      ansible.builtin.debug:
#        msg: URL = {{URL}}
#- name: Demo on task Variables
#  hosts: all
#  tasks:
#    - name: Access URL from task var
#      ansible.builtin.debug:
#        msg: URL = {{URL}}
#      vars:
#        URL: task.google.com
###    - name: Access URL from previous task
###    ansible.builtin.debug:
###      msg: URL = {{URL}}
### you can declare the varibale on task however it only for that task
#- name: Demo on inventory Variables
#  hosts: all
#  tasks:
#    - name: Access URL from inventory
#      ansible.builtin.debug:
#        msg: URL = {{URL}}
#- name: Demo on cli Variables
#  hosts: all
#  tasks:
#    - name: Access URL from cli varibale
#      ansible.builtin.debug:
#        msg: URL = {{URL}}
#- name: Demo for precedence
#  hosts: all
#  vars:
#    URL1: play.example.com
#  vars_files:
#    - sample-vars.yml
#  tasks:
#    - name: Print URL1
#      ansible.builtin.debug:
#        msg: URL1 = {{URL1}}
#      vars:
#        URL1: play.example.com
#- name: print facts
#  hosts: all
#  vars:
#    ansible_distribution: sample
#  tasks:
#    - name: Print a fact
#      ansible.builtin.debug:
#        msg: "HOST OS ={{ansible_distribution}}"
## General good practice we dont start our user varibale with ansible_ ,because those are for system facts

- name: run time varibales
  hosts: all
  tasks:
    - name: Get uptime command output
      ansible.builtin.shell: uptime
      register: OUT
      ##OUT is a variable
    - name: print OUT
      ansible.builtin.debug:
        msg: "{{OUT}}"
